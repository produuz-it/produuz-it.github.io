import{_ as s,o as t,c as a,Q as o}from"./chunks/framework.b67c47e6.js";const h=JSON.parse('{"title":"API TUTORIAL – REPORTS","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/api/reports/index.md","filePath":"tutorials/api/reports/index.md","lastUpdated":1755506951000}'),n={name:"tutorials/api/reports/index.md"},e=o(`<h1 id="api-tutorial-–-reports" tabindex="-1">API TUTORIAL – REPORTS <a class="header-anchor" href="#api-tutorial-–-reports" aria-label="Permalink to &quot;API TUTORIAL – REPORTS&quot;">​</a></h1><h3 id="intro" tabindex="-1">Intro <a class="header-anchor" href="#intro" aria-label="Permalink to &quot;Intro&quot;">​</a></h3><p>We offer an endpoint that allows posting a list of report payloads. These payloads can have different formats. The system will attempt to retrieve the related designs by UUID, or failing that, by name.</p><p>The flow to obtain the report will be:</p><ol><li>Post the report payload and receive the UUIDs of the created report objects.</li><li>Recursively check the status of the reports until they are &quot;ready.&quot;</li><li>Once &quot;ready,&quot; use the pre-signed URL to download the report from AWS.</li></ol><h3 id="post-reports" tabindex="-1">Post reports <a class="header-anchor" href="#post-reports" aria-label="Permalink to &quot;Post reports&quot;">​</a></h3><p>The payload objects should hold almost the same info as the payload frontend sends when it creates a report. Each report is different and has some information that is dynamically added to the &quot;meta&quot; field.</p><p>Parts reports (like BoMs, machine files for parts, ...) can be selected by either a list of &quot;selected_assemblies&quot; or a list of &quot;part_batches&quot;. Both as uuids.</p><p>Panel reports (like mob2 files) have to be selected by the list of &quot;selected_assemblies&quot;.</p><p><strong>Endpoint: <a href="https://back.produuz.it/api/v2/reports/bulk_launch/" target="_blank" rel="noreferrer">https://back.produuz.it/api/v2/reports/bulk_launch/</a></strong></p><ul><li>Method: POST.</li><li><strong>Request Body:</strong> List of payloads.</li><li><strong>Response:</strong> List of created report objects.</li></ul><p><strong>Example Request Payload</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;custom report name&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;document_type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;plates_bom&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;meta&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;custom report name&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;project&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;fa009961-10f1-46b1-9455-837ed0b55cea&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// Direct project picking</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;project_name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;my_project_name&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// If no uuid, you can provide a name for an existent or new project.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;super_project&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;my_project_folder&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// If no uuid, you can provide a super_project name.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;selected_assemblies&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;uuid-of-an-assembly&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;meta&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;production_line_uuid&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;uuid-of-the-production-line&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// Always needed for mob files</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;fill_mob_defaults&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// For auto mob defaults filling</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;part_batches&quot;</span><span style="color:#E1E4E8;">: []</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//... another report payload</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//... another report payload</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;custom report name&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;document_type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;plates_bom&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;meta&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;custom report name&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;project&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;fa009961-10f1-46b1-9455-837ed0b55cea&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// Direct project picking</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;project_name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;my_project_name&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// If no uuid, you can provide a name for an existent or new project.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;super_project&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;my_project_folder&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// If no uuid, you can provide a super_project name.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;selected_assemblies&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;uuid-of-an-assembly&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;meta&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;production_line_uuid&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;uuid-of-the-production-line&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// Always needed for mob files</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;fill_mob_defaults&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// For auto mob defaults filling</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;part_batches&quot;</span><span style="color:#24292E;">: []</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//... another report payload</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//... another report payload</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><p><strong>Example Response Payload</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//... another report</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//... another report</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//... another report</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//... another report</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><h3 id="report-types-document-type-field" tabindex="-1">Report types (&quot;document_type&quot; field) <a class="header-anchor" href="#report-types-document-type-field" aria-label="Permalink to &quot;Report types (&quot;document_type&quot; field)&quot;">​</a></h3><p>You can select from a list of document_types (boms, machine files, ...). Some of them need a production line selection, others a machine selection.</p><table><thead><tr><th>document_type</th><th>Description</th><th>Needs PL</th><th>Needs machine</th></tr></thead><tbody><tr><td>plates_bom</td><td>Plates BoM</td><td>No</td><td>No</td></tr><tr><td>wood_bom</td><td>Wood BoM</td><td>No</td><td>No</td></tr><tr><td>designs_bom</td><td>Per-Design BoM</td><td>No</td><td>No</td></tr><tr><td>accesories_bom</td><td>Accesories BoM</td><td>No</td><td>No</td></tr><tr><td>custom_bom</td><td>No description available</td><td>No</td><td>No</td></tr><tr><td>qr_stickers</td><td>QR Stickers</td><td>No</td><td>No</td></tr><tr><td>quality_control</td><td>Quality Control Report</td><td>No</td><td>No</td></tr><tr><td>issues</td><td>Issues Report</td><td>No</td><td>No</td></tr><tr><td>custom_woodcsv</td><td>Custom Woods CSV</td><td>No</td><td>No</td></tr><tr><td>custom_platecsv</td><td>Custom Plates CSV</td><td>No</td><td>No</td></tr><tr><td>custom_accesorycsv</td><td>Custom Accesories CSV</td><td>No</td><td>No</td></tr><tr><td>wood_btl</td><td>BTL File [Woods]</td><td>No</td><td>Yes</td></tr><tr><td>wood_bvx</td><td>BVX File [Hundegger][Woods]</td><td>No</td><td>Yes</td></tr><tr><td>plates_xcs</td><td>XCS Maestro File [Plates]</td><td>No</td><td>Yes</td></tr><tr><td>plates_ardis</td><td>Ardis File [Plates]</td><td>No</td><td>Yes</td></tr><tr><td>plates_dxf</td><td>DXF File [Plates]</td><td>No</td><td>Yes</td></tr><tr><td>plates_ptx</td><td>No description available</td><td>No</td><td>Yes</td></tr><tr><td>plates_cix</td><td>CIX Biesse File [Plates]</td><td>No</td><td>Yes</td></tr><tr><td>frame_mtf</td><td>MTF File [Roofs]</td><td>No</td><td>Yes</td></tr><tr><td>frame_nailer_csv</td><td>Frame Nails csv file</td><td>No</td><td>Yes</td></tr><tr><td>panel_mob1</td><td>MOB v1 Machine File</td><td>Yes</td><td>No</td></tr><tr><td>panel_mob2</td><td>MOB v2 Machine File</td><td>Yes</td><td>No</td></tr></tbody></table><p>For &quot;panel_mob1&quot; and &quot;panel_mob2&quot;, you can simply place a flag &quot;fill_mob_defaults&quot; into the meta field to automatically load defaults from your machine setups. Otherwise you need to replicate the &quot;dynamic_forms&quot; field from a real life report object example.</p><h3 id="fetch-report-objects" tabindex="-1">Fetch report objects <a class="header-anchor" href="#fetch-report-objects" aria-label="Permalink to &quot;Fetch report objects&quot;">​</a></h3><p>Once a report is created, a job is enqueued to make the actual files.</p><p>You should fetch your report objects iteratively each N seconds until you find a response with status &quot;ready&quot;. Once you have it, you can directly download the file from AWS through a presigned url dynamically provided in the object.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Please not that the presigned urls have expiracy. They are automatically refreshed when needed so you only need to fetch again the report object.</p></div>`,23),l=[e];function p(r,c,d,i,y,u){return t(),a("div",null,l)}const m=s(n,[["render",p]]);export{h as __pageData,m as default};
